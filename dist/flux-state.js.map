{"version":3,"sources":["webpack://flux-state/webpack/universalModuleDefinition","webpack://flux-state/webpack/bootstrap","webpack://flux-state/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"react\"}","webpack://flux-state/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","View","props","TypeError","subscriptions","toBeSubscribed","hasBeenUnmounted","store","eventName","subscriber","receiveLastValue","subscription","subscribe","this","push","that","forEach","info","unsubscribe","React","Component","useFluxStore","initialValue","callback","useState","setValue","useEffect","state","useEvent","reducer","useSubscription","Error","callbackRef","useRef","current"],"mappings":"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","file":"flux-state.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flux-state\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"flux-state\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import React, {useState, useEffect,useRef} from 'react';\r\n\r\nclass View extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    if (new.target === View) {\r\n      throw new TypeError(\"Cannot construct View instances directly\");\r\n    }\r\n    this.subscriptions = [];\r\n    this.toBeSubscribed = [];\r\n    this.hasBeenUnmounted = false;\r\n  }\r\n\r\n  /**\r\n   * Subscribe to an Event in a Store\r\n   * This is a helpful method to keep track of your subscriptions on UnMount and Mount of the Component\r\n   * @param store The Store object where we want to subscribe to, must be a subclass of v2/Store\r\n   * @param eventName The Event Name to which you want to subscribe\r\n   * @param subscriber The subscriber function that's gonna be executed when it happens\r\n   * @param receiveLastValue Whether the subscriber\r\n   * @return subscription The subscription for this event in the Store\r\n   * @throws an Error if the event does not exists in the Store\r\n   * @throws an Error if the subscriber is not a function\r\n   */\r\n  subscribe(store, eventName, subscriber, receiveLastValue = false) {\r\n    const subscription = store.subscribe(eventName, subscriber, receiveLastValue);\r\n    this.toBeSubscribed.push({store, eventName, subscriber, receiveLastValue});\r\n    this.subscriptions.push(subscription);\r\n    return subscription;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.hasBeenUnmounted)\r\n      return;\r\n    const that = this;\r\n    this.toBeSubscribed.forEach(info => {\r\n      const subscription = info.store.subscribe(info.eventName, info.subscriber, info.receiveLastValue);\r\n      that.subscriptions.push(subscription);\r\n    });\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.subscriptions.forEach(subscription => {\r\n      subscription.unsubscribe();\r\n    });\r\n    this.subscriptions = [];\r\n    this.hasBeenUnmounted = true;\r\n  }\r\n}\r\n\r\n/**\r\n * React Hook to use an Event of the Store of the Flux State Library.\r\n * @deprecated use useEvent instead\r\n * @param store The Flux Store to which the events belongs\r\n * @param eventName The event on the Flux Store\r\n * @param initialValue An Initial Value for the state\r\n * @param callback a function to be called when the subscription gets triggered\r\n */\r\nconst useFluxStore = (store, eventName, initialValue = null, callback = null) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    const handleStateChange = (state) => {\r\n      if (callback)\r\n        callback(state);\r\n      setValue(state)\r\n    };\r\n    const subscription = store.subscribe(eventName, handleStateChange);\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return value;\r\n};\r\n\r\n/**\r\n * React Hook to subscribe to an Event of a Store of the Flux State Library.\r\n * @param {object} store - The Flux Store to which the events belongs.\r\n * @param {string} eventName - The event on the Flux Store.\r\n * @param {any} initialValue -  An Initial Value for the state.\r\n * @param {Function} reducer - A function to transform the state before return the value.\r\n */\r\nconst useEvent = (store, eventName, initialValue = null, reducer = null) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    const handleStateChange = (state) => {\r\n      if (reducer)\r\n        state = reducer(state);\r\n      setValue(state)\r\n    };\r\n    const subscription = store.subscribe(eventName, handleStateChange);\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return value;\r\n};\r\n\r\n/**\r\n * React Hook to subscribe to an specific event\r\n * @param store The Flux Store to which the events belongs\r\n * @param eventName The event on the Flux Store\r\n * @param callback a function to be called when the subscription gets triggered\r\n */\r\nconst useSubscription = (store, eventName, callback) => {\r\n  if (callback === null || callback === undefined || typeof callback !== 'function')\r\n    throw new Error(`'callback parameter must be a function`);\r\n\r\n\r\n  // Store the callback in a ref and update it on every render\r\n  const callbackRef = useRef(callback)\r\n  callbackRef.current = callback\r\n\r\n  useEffect(() => {\r\n    // Subscribe a function that gets the updated version of the callback \r\n    const subscriptionCallback = ()=> {\r\n      callbackRef.current()\r\n    }\r\n\r\n    const subscription = store.subscribe(eventName, subscriptionCallback);\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [eventName, store]);\r\n};\r\n\r\n\r\nexport default View;\r\nexport {useFluxStore, useSubscription, useEvent, View};\r\n"],"sourceRoot":""}